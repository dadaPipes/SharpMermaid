{
  "docs/features/project-diagram/logical-project-diagram.html": {
    "href": "docs/features/project-diagram/logical-project-diagram.html",
    "title": "Logical Project Diagram | SharpMermaid",
    "summary": "Logical Project Diagram Description As a developer, I want to generate a package-style diagram that groups projects by their folder structure, So that I can understand how the solution is logically organized and interconnected. Rules bin and obj must not appear in the generated diagram. Only .csproj files are included in the diagram The diagram must include a node for each project in the solution. Each project may include one or multiple dependencies. The diagram may represent dependencies between projects in the solution. Each project node may include a clickable url Nodes may support tooltips. Nodes may support click actions. All diagrams must have a title same as the solution name. // TODO: Add some kind of message: \"No projects found\" Nodes must be grouped visually according to their folder structure. Grouping boxes must be based on the folder names containing the projects. The diagram must not include bin, obj, or non-project folders. Scenarios Empty Solution Given the solution contains no projects When the diagram is generated Then the diagram should show a root grouping box with the solution folder name And no nodes or dependencies Root Projects Only Given all projects are in the solution root folder When the diagram is generated Then the diagram should show one node per project And the root folder should be a grouping box Root Projects With Dependencies Given all projects are in the solution root folder And some projects depend on each other When the diagram is generated Then the diagram should show one node per project And arrows should represent the dependencies And the root folder should be a grouping box Mixed Folder Structure With 1 Root Project Given one project is in the root folder And other projects are in subfolders When the diagram is generated Then the diagram should show nodes grouped by folder And each folder should be a grouping box And arrows should represent dependencies Mixed Folder Structure With Multiple Root Projects Given multiple projects are in the root folder And other projects are in subfolders And some projects depend on each other When the diagram is generated Then the diagram should show all nodes And group nodes by folder And draw arrows for dependencies And skip non-project folders"
  },
  "docs/features/project-diagram/physical-project -diagram.html": {
    "href": "docs/features/project-diagram/physical-project -diagram.html",
    "title": "Physical Project Diagram | SharpMermaid",
    "summary": "Physical Project Diagram Description As a developer, I want to generate a diagram that reflects the solution structure on disk, So that I can analyze and visualize project organization and dependencies. Rules bin and obj must not appear in the generated diagram. Only .csproj files are included in the diagram The diagram must include a node for each project in the solution. Each project may include one or multiple dependencies. The diagram may represent dependencies between projects in the solution. Each project node may include a clickable url Nodes may support tooltips. Nodes may support click actions. All diagrams must have a title same as the solution name. // TODO: Add some kind of message: \"No projects found\" Scenarios Empty Solution Given the solution has no projects When the diagram is generated Then the diagram should have no nodes or dependencies And the title should be the solution name Single Project With Clickable URL Given the solution has a single project When the diagram is generated Then the diagram should include one node And the node should have a clickable URL Multiple Projects With No Dependencies Given the solution has multiple projects with no dependencies When the diagram is generated Then the diagram should include one node per project And no arrows should exist between them And all nodes should have clickable URLs Multiple Projects With Dependencies Given the solution has multiple projects with dependencies When the diagram is generated Then the diagram should include one node per project And arrows should represent the dependencies And all nodes should have clickable URLs"
  },
  "docs/features/project-diagram/shared-rules.html": {
    "href": "docs/features/project-diagram/shared-rules.html",
    "title": "| SharpMermaid",
    "summary": "bin and obj must not appear in the generated diagram. Only .csproj files are included in the diagram The diagram must include a node for each project in the solution. Each project may include one or multiple dependencies. The diagram may represent dependencies between projects in the solution. Each project node may include a clickable url Nodes may support tooltips. Nodes may support click actions. All diagrams must have a title same as the solution name. // TODO: Add some kind of message: \"No projects found\""
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | SharpMermaid",
    "summary": "Getting Started Bacon ipsum dolor amet bacon hamburger doner beef tail, boudin ribeye biltong. Pastrami meatball ball tip bacon pig turkey. Meatball short loin pig turkey shoulder pork belly. T-bone drumstick pastrami cupim shoulder ribeye sausage, strip steak turducken shankle jowl kevin beef ribs bacon short loin. Sirloin pig shank tri-tip t-bone jerky bacon tail, hamburger landjaeger swine. Hamburger pancetta chislic fatback, tongue tri-tip bacon capicola pastrami ground round beef ribs venison."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to SharpMermaid | SharpMermaid",
    "summary": "Welcome to SharpMermaid Important Under construction Document C# code in Markdown using Mermaid diagrams. This project is a C# library that generates Markdown documentation from C# code, with support for Mermaid diagrams. It is designed to be easy to use and integrate into your existing documentation workflow."
  }
}