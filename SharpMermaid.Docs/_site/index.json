{
  "docs/features/project-diagram/logical-project-diagram.html": {
    "href": "docs/features/project-diagram/logical-project-diagram.html",
    "title": "Logical Project Diagram | SharpMermaid",
    "summary": "Logical Project Diagram Description As a developer, I want to generate a package-style diagram that groups projects by their folder structure, So that I can understand how the solution is logically organized and interconnected. Rules Diagram must have a title same as the solution name Project nodes that has source files, must include a url to the projects class diagram The diagram must include a node for each project in the solution Each project may include one or multiple dependencies The diagram may represent dependencies between projects in the solution // TODO: Add some kind of message: \"No projects found\" Project Nodes must be grouped into subgraphs based on their folder structure. Scenarios Solution With Without Projects Given the solution contains no projects When the diagram is generated Then the title should be the solution name And the diagram should have no nodes or dependencies Solution With Root Projects Only Given all projects are in the solution root folder When the diagram is generated Then the title should be the solution name And the diagram should include a node for each project Solution With Root Projects Only With Dependencies Given all projects are in the solution root folder And some projects depend on each other When the diagram is generated Then the title should be the solution name And the diagram should include a node for each project And arrows should represent the dependencies between projects Mixed Folder Structure With 1 Root Project Given one project is in the root folder And the other projects are in a subfolder And the root project has dependencies to the other projects When the diagram is generated Then the title should be the solution name And the diagram should include a node for each project And nodes should be grouped into subgraphs based on their folder structure And And arrows should represent project dependencies Mixed Folder Structure With Multiple Root Projects Given multiple projects are in the root folder And other projects are in subfolders And some projects depend on each other When the diagram is generated Then the title should be the solution name And the diagram should include a node for each project And nodes should be grouped into subgraphs based on their folder structure And And arrows should represent project dependencies"
  },
  "docs/features/project-diagram/physical-project -diagram.html": {
    "href": "docs/features/project-diagram/physical-project -diagram.html",
    "title": "Physical Project Diagram | SharpMermaid",
    "summary": "Physical Project Diagram Description As a developer, I want to generate a diagram that reflects the solution structure on disk, So that I can analyze and visualize project organization and dependencies. Rules Diagram must have a title same as the solution name Project nodes that has source files, must include a url to the projects class diagram The diagram must include a node for each project in the solution Each project may include one or multiple dependencies The diagram may represent dependencies between projects in the solution // TODO: Add some kind of message: \"No projects found\" Scenarios Solution With Without Projects Given the solution has no projects When the diagram is generated Then the diagram should have no nodes or dependencies And And the title should be the solution name Solution With Single Project Given the solution has a single project And the project has at least one source file When the diagram is generated Then the diagram should include one node And the diagram should have a title same as the solution name And the diagram should include a node for the project in the solution And the diagram should include a url to the projects class diagram Multiple Projects Without Dependencies Given the solution has multiple projects with no dependencies And each project has at least one source file When the diagram is generated Then the diagram should include one node per project And the diagram should have a title same as the solution name And the diagram should include a url to the projects class diagram Multiple Projects With Dependencies Given the solution has multiple projects with dependencies And each project has at least one source file When the diagram is generated Then the diagram should include one node per project And arrows should represent the dependencies between project nodes And each should include a url to the projects class diagram And the diagram should have a title same as the solution name And the diagram should include a url to the projects class diagram"
  },
  "docs/features/project-diagram/shared-rules.html": {
    "href": "docs/features/project-diagram/shared-rules.html",
    "title": "| SharpMermaid",
    "summary": "Diagram must have a title same as the solution name Project nodes that has source files, must include a url to the projects class diagram The diagram must include a node for each project in the solution Each project may include one or multiple dependencies The diagram may represent dependencies between projects in the solution // TODO: Add some kind of message: \"No projects found\""
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | SharpMermaid",
    "summary": "Getting Started Bacon ipsum dolor amet bacon hamburger doner beef tail, boudin ribeye biltong. Pastrami meatball ball tip bacon pig turkey. Meatball short loin pig turkey shoulder pork belly. T-bone drumstick pastrami cupim shoulder ribeye sausage, strip steak turducken shankle jowl kevin beef ribs bacon short loin. Sirloin pig shank tri-tip t-bone jerky bacon tail, hamburger landjaeger swine. Hamburger pancetta chislic fatback, tongue tri-tip bacon capicola pastrami ground round beef ribs venison."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to SharpMermaid | SharpMermaid",
    "summary": "Welcome to SharpMermaid Important Under construction Document C# code in Markdown using Mermaid diagrams. This project is a C# library that generates Markdown documentation from C# code, with support for Mermaid diagrams. It is designed to be easy to use and integrate into your existing documentation workflow."
  }
}